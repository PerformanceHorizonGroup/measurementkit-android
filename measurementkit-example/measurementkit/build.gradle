buildscript {

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.0.0-beta2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}


apply plugin: 'com.android.library'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'measurementkit'

    publishedGroupId = 'com.performancehorizon.android'
    libraryName = 'measurementkit'
    artifact = 'measurementkit'

    libraryDescription = 'Android SDK for performance marketing event tracking from Performance Horizon'

    siteUrl = 'https://github.com/PerformanceHorizonGroup/measurementkit-android'
    gitUrl = 'https://github.com/PerformanceHorizonGroup/measurementkit-android.git'

    libraryVersion = '0.2.3'

    developerId = 'owainbrown'
    developerName = 'Owain Brown'
    developerEmail = 'owain.brown@performancehorizon.com'

    licenseName = 'The MIT License (MIT)'
    licenseUrl = 'https://opensource.org/licenses/MIT'
    allLicenses = ["MIT"]
}


android {

    lintOptions {
        warning 'InvalidPackage'
    }

    compileSdkVersion 23
    buildToolsVersion '23.0.2'
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 4
        versionName "0.2.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }

    /*testOptions {
        unitTests.returnDefaultValues = true
    }*/
}

dependencies {
    compile 'com.android.support:appcompat-v7:23.0.0'
    compile 'com.squareup.okhttp3:okhttp:3.0.1'
    compile 'com.parse.bolts:bolts-android:1.4.0'
    compile 'com.android.support:support-annotations:23.0.1'
    compile 'com.google.android.gms:play-services-ads:8.4.0'
    compile 'com.android.support:support-annotations:23.1.1'

    testCompile 'junit:junit:4.12'
    testCompile "org.robolectric:robolectric:3.0"
    testCompile 'org.mockito:mockito-core:1.10.19'

    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
}

apply plugin: org.gradle.api.plugins.AndroidMavenPlugin

group = publishedGroupId                               // Maven Group ID for the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project { packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }

    apply plugin: 'com.jfrog.bintray'

    version = libraryVersion

    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    // Bintray
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    bintray {
        user = properties.getProperty("bintray.user")
        key = properties.getProperty("bintray.apikey")

        configurations = ['archives']
        pkg {
            repo = bintrayRepo
            name = bintrayName
            desc = libraryDescription
            websiteUrl = siteUrl
            vcsUrl = gitUrl
            licenses = allLicenses
            publish = true
            publicDownloadNumbers = true
            version {
                desc = libraryDescription
                gpg {
                    sign = true //Determines whether to GPG sign the files. The default is false
                    passphrase = properties.getProperty("bintray.gpg.password")
                    //Optional. The passphrase for GPG signing'
                }
            }
        }
    }
}
dependencies {
    compile 'com.android.support:support-annotations:23.1.0'
    compile 'org.apache.maven:maven-ant-tasks:2.1.3'
}